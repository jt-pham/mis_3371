
<html>
<head>
<style type="text/css">
body {font-family:Comic Sans MS;}
</style>
<script language="javascript">

function fred()
{
   
  
  
  
// Name is for Forms, ID is for the page
// There are 25 questions related to the HTML objects shown on the page
// They are all in the form named "twocities".
//
// Each part of the assignment below instructs you to manipulate or examine
// the value of the HTML elements and place an answer in one
// of twenty-five span blocks that appear on this page.
//
// e.g., for span block named "ans1" you will say:
//
// ans1.innerHTML = "some string";
//
//
// the questions 1 through 15 below use the string value from the textarea named "begins"
// stored in a variable named "beg" like this:


//
// *** First remove all the periods, commas and hyphens from the "beg" string before you answer questions 1 through 15
//
beg = document.twocities.begins.value;
len_beg = beg.length;
begTemp = beg.replace(/[\s]/g, '!');
//For this regex, we replace anything that is not characters a-z, A-Z, or whitespace with emptystring "". Note Global flag g
//Alternatively, we can use [^\w\s] - anything not a digit, character, whitespace
beg = beg.replace(/[^a-zA-Z\s]/g, '');

//
// ***(1) how many words are the string named "beg"? (words not characters)
// ***    show the answer in the span block  with id = "ans1"
var begArray = beg.split(" ");
var answerOne = (begArray.length).toString();
ans1.innerHTML = answerOne;

// ***(2) store words in the string "beg" in an array.
// ***    show the first and last elements of the array in the span block with id="ans2"
begTemp = beg.replace(/[\s]/g, '!');
begArray = begTemp.split("!");
var answerTwo = [begArray[0], begArray[begArray.length-1]]; 
ans2.innerHTML = answerTwo.toString();

// ***(3) show each word in the array produced in (2) above on one line separated by commas
// ***    in the span block  with id="ans3"
ans3.innerHTML = begArray;

       
// ***(4) create a new string using the value of "beg" where all the characters are capitalized
// ***    show the new string  in the span block  with id="ans4"
// 
upbeg = beg.toString().toUpperCase();
ans4.innerHTML = upbeg;

//
// ***(5)  count the number of times the letters "a", "e", "i", "o", "u" appear in the string "beg"
// ***     show these 5 counts on one line separated by commas in the span block  with id="ans5"
//
A_inBeg = beg.match(/[aA]/g).length;
E_inBeg = beg.match(/[eE]/g).length;
I_inBeg = beg.match(/[iI]/g).length;
O_inBeg = beg.match(/[oO]/g).length;
U_inBeg = beg.match(/[uU]/g).length;
BOB_DYLAN = [A_inBeg, E_inBeg, I_inBeg, O_inBeg, U_inBeg];
ans5.innerHTML = BOB_DYLAN;
  

//
// ***(6)  show the location of each occurence of the character "e" in the string "beg"
// ***     on one line separated by commas in the span block  with id="ans6"
//
var re = /[eE]/g, MICHAEL_MOORE, indices = [];

    while ((MICHAEL_MOORE = re.exec(beg)))
    {
        indices.push(MICHAEL_MOORE.index);
    }
        
ans6.innerHTML = indices.toString();

//
// ***(7)  show the location where each word begins in the string named "beg"
// ***     show the answers on one line separated by commas in the span block  with id="ans7"
//

var java = /\b(\w)/g, expressionMatch, ind = [];
    while ((expressionMatch = java.exec(beg)))
        {
            ind.push(expressionMatch.index);
        }

    ans7.innerHTML = ind.toString();



//
// ***(8) place the words in the string "beg" in a table with a one pixel border,
// ***    with a gray backgound. Use only ten cells per row. Empty cells should contain
// ***    the word "null". Show the table in the span block withkkfefeffswdswtf id="ans8"
//
    yolo = beg.split(" ");
    var table = '';
    var maxRows = Math.ceil(yolo.length / 10);
    wordIndex = 0;

    for (var r = 0; r < maxRows ; r++) //First loop creates <TR>
        { //delimiter in list, contained inside list
            table += '<tr>';
            for (var c = 0; c < 10 ; c++)
                {   
                    table += '<td>' + yolo[wordIndex] + '</td>';
                    wordIndex++;
                    
                }
            table += '</tr>';  
        }
    ans8.innerHTML = '<table border = 1, bgcolor = gray>' + table + '</table>';

//
    
// ***(9)  replace each occurence of the blank character in "beg" with the character "*"
// ***     show the result in the span block  with id="ans9"
matchBlankCharacters = beg.replace(/\s/g, "*");
ans9.innerHTML = matchBlankCharacters.toString();
 

//
// ***(10)  sort the words in array created in (2) into alphabetical order
// ***      show the results in the span block with id="ans10" on a single line
// The localeCompare method returns a number indicating whether str1 comes before, after or is the same as str2 in sort order.
//Returns -1 if a is sorted before b
//Returns 0 if the two strings are equal
//Returns 1 if a is sorted after b 

ans10.innerHTML = begArray.sort( 
function(a, b)
{
    return a.toLowerCase().localeCompare(b.toLowerCase());
});
    


//
// ***(11)  show the ASCII character number of each character in the string "beg"
// ***      separate each value with a comma and place the result on a single line in the span block
// ***     with id="ans11"


tempString = beg.toString();
while(tempString.indexOf(" ") > -1)
    {
        tempString = tempString.replace(" ", "");
    }
tempString = tempString.split("");
    

busterArray = new Array(tempString.length);
for (i = 0; i < tempString.length ; i++) {
    busterArray[i] = (tempString[i].charCodeAt(0));
}
ans11.innerHTML = busterArray; 
    

//
// ***(12)  count the number of words in the string "beg" that have 2,3,4,5 or 6 characters
// ***      show these five counts on a single line separated by commas in the span block with id="ans12"
//
    
yoloArray = Array(5);
yoloArray[0] = beg.match(/\w{2}\b/g).length;
yoloArray[1] = beg.match(/\w{3}\b/g).length;
yoloArray[2] = beg.match(/\w{4}\b/g).length;
yoloArray[3] = beg.match(/\w{5}\b/g).length;
yoloArray[4] = beg.match(/\w{6}\b/g).length;
ans12.innerHTML = yoloArray;

//
// ***(13)  create a new string that contains the words in the string "beg" in reverse order
// ***      show this new string on a single line in the span block with id="ans13"
//
temp = beg.split(" ").reverse();
ans13.innerHTML = temp.toString();
   
//
// ***(14)  create a new string that contains the characters in the string "beg" in all capital letters
// ***      show this new string on a single line in the span block with id="ans14"
//begReversedCaps = begReversed.replace(/[a-zA-Z]/g, function(lambda){ lambda.toUpperCase(); });
upper = beg.toUpperCase();
ans14.innerHTML = upper;
    
    
     
//

//
// ***(15)  store the number of times the letter "a" appears in the string "beg" in 1st location;
// ***      store the number of times the letter "b" appears in the string "beg" in 2nd location;
// ***      store the number of times the letter "c" appears in the string "beg" in 3rd location;
// ***      store the number of times the letter "d" appears in the string "beg" in 4th location;
// ***      etc.
// ***      show the 26 counts on one line separated by commas in the span block with id="ans15"
/*
alphabet = "abcdefghijklmnopqrstuvwxyz";
alphaArray = alphabet.split("");
counterArray = Array(26);

for (var i=0;i<alphaArray.length;i++) 
{
    var letterSearch = alphaArray[i];
    var count = 0;
    for (var j=0; j<tempString.length; j++) {
    while(beg.indexOf(letterSearch > -1)) {
        counterArray[i] = counterArray[i] + 1;
        }
    }
    
    
}

ans15.innerHTML = counterArray;
    

    
    
*/
//

//
// ***(16)  Examine the radio buttons and produce a list of the three "values" of the radios buttons separated by commas on a single line
//         in the span block with id="ans16" Checkboxes do not send any values - either on or off. All have the same name and cannot be accessed.
  //   Use element and check if radio is checked 
    
var radioValues = Array(3);
for(i =0; i<3; i++)
    {
        
        if (window.document.twocities.books[i].checked) {
            radioValues[i] = window.document.twocities.books[i].value;
        }
        else {
            window.document.twocities.books[i].checked = true;
            radioValues[i] = window.document.twocities.books[i].value;
        }
    }
ans16.innerHTML = radioValues.toString();


//
// ***(17)  Show the value of the radio button which is checked and its elements number separated by a comma on a line by itself
// ***      in the span block with id="ans17"
//
    var answerArray = Array();
    for (i=0; i<3; i++)
        {
            if(window.document.twocities.books[i].checked) {
                answerArray.push(i);
                answerArray.push(window.document.twocities.books[i].value);
                
                
            }
            else {}
                
        }
    ans17.innerHTML = answerArray;


//
// *** (18) Show the elements number and value of the six checkboxes in a six-row, two-column table with a 2 pixel border
// ***      in the span block with id="ans18"e
    
    var checkBoxArray = new Array(6);
    for(i=4; i < 10; i++) {
 
        checkBoxArray[i-4] = window.document.twocities.elements[i].value;

    }

    newTable = document.createElement('table');
    
    for(i = 4; i<10 ; i++) {
        newTable += '<tr>';
        for (j = 0; j<2 ; j++)
            {
                if (j==0) {
                    newTable += '<td>' + i + '</td>'; }
                else {
                    newTable += '<td>' + checkBoxArray[i-4];
                }
            }
        newTable += '</tr>';
    }
    
    ans18.innerHTML = '<table border = 2>' + newTable + '</table>';

            

// ***(19)  Examine the checkboxes and produce a list of the "values" of the checkboxes that are checked. Separated the values by commas on a single line
//
var n = 0;
var checkedArray = new Array();
for(i = 4; i<10 ; i++) {
    if(!window.document.twocities.elements[i].checked)
        {
            console.log('ok senpai');
        }
    else {
        checkedArray[n] = window.document.twocities.elements[i].value;
        n++;
    }
    
}
    ans19.innerHTML = checkedArray;

//
// ***(20)  Show the values of all the options in the select (drop down menu) named "book3chapters" in an fifteen-column one row table with a 2 pixel border border
// ***      in the span block with id="ans20"
    var dropArray = new Array(15);
    for (i = 0; i < 15; i++) { 
        dropArray[i] = window.document.twocities.book3chapters.options[i].text;
    }
    
    
    var fuckTablesGetMoney = document.createElement('table');
    
    for (i = 0; i < 1; i++) {
        fuckTablesGetMoney += '<tr>';
        for (j = 0; j < 15; j++) {
            fuckTablesGetMoney += '<td>' + dropArray[j] + '</td>';
}
        fuckTablesGetMoney += '<tr>';
    }
    ans20.innerHTML = '<table border = 2>' + fuckTablesGetMoney + '</table>';
    
//

//
// ***(21)  Show the value of the select (drop down menu) named "book3chapters" which is selected and its selectedIndex value separated by a comma on a line by itself
// ***      in the span block with id="ans21"
var huluIsAScam = '';
var huluIndex = 0;
for (i = 0; i< 15; i++)
    {
        if (window.document.twocities.book3chapters.selectedIndex == i) {
            huluIsAScam = window.document.twocities.book3chapters.options[i].text;
            huluIndex = i;
            
        }
        else {
            
            
        }
    }
ans21.innerHTML = huluIsAScam +" , "+ huluIndex;

//
// *** Retrieve the value of the textarea named "beg" again and store it in a variable named "beg2", DO NOT REMOVE ANY CHARACTERS
// *** You will use this string for questions 22 and 23
beg2 = document.twocities.begins.value;

//
// *** (22) Show the text phrases that are separated by commas in the string "beg2" . Each phrase should be on a line by itself.
// ***      Place the result in the span block with id="ans22"
    shitSplitByComma = beg2.split(',');
    var fuckTables = document.createElement('table');
    for (i =0; i < shitSplitByComma.length; i++) {
        fuckTables += "<tr>"
        for(j =0; j < 1; j++) {
            fuckTables += "<td>" + shitSplitByComma[i] + "</td>";
        }
        fuckTables += "</tr>"
    }
    ans22.innerHTML = "<table>" + fuckTables + "</tables>";
//

//
// *** (23) Capitalize the first letter of each phrase from #22 bove (phrases are separated by commas) in the original string "beg2".
// ***      Place each phrase should be on a line by itself.
// ***      Place the result in the span block with id="ans23"
var newLevelArray = new Array();
for (i = 0; i < shitSplitByComma.length; i++) { 
    newLevelArray[i] = shitSplitByComma[i].charAt(0).toUpperCase() + shitSplitByComma.slice(1);

}
    
    
    var fuckTables = document.createElement('table');
    for (i =0; i < newLevelArray.length; i++) {
        fuckTables += "<tr>"
        for(j =0; j < 1; j++) {
            fuckTables += "<td>" + newLevelArray[i] + "</td>";
        }
        fuckTables += "</tr>"
    }
    ans23.innerHTML = "<table>" + fuckTables + "</tables>";
//
//
// *** (24) Make the third radio button ("The Track of The Storm") checked.
// ***      Make ALL six of the checkboxes be checked.
// ***      Make the select named "book3chapters" (the drop down menu) show "Fifty-Two" as the selection
// ***      Place the string "DONE!" in the span block with id="ans24"
window.document.twocities.books[3].checked = true;
    
//
// *** (25) Place the famous last line of the book (without quotes) in the span block with id="ans25"
//
            ans25.innerHTML = newLevelArray[newLevelArray.length-1];
            


}
-->
</script>
</head>
<body>
<CENTER>
<TABLE border="2" width="100%">
<TR><TD width="120" valign="middle" align="center" bgColor="#bbbbbb"><center><IMG align="top" alt="capt webb" border=2 src="captsm.gif"><BR><span STYLE="font-size:8px">Capt. Horatio T.P. Webb</span></center></TD>
<TD valign="middle" bgColor="#bbbbbb" colSpan="2" align="center"><center><B>ASSIGNMENT #1 Javascript<br>MIS 3371 Transaction Processing I<BR>Parks -- Spring 2016</B><BR><span STYLE="font-size:10px">Version 1 -- Last Updated 9:00 AM 1/12/2016</span></center></TD></TR></table></center>
The text used in this assignment is from Charles Dicken's novel "A Tale of Two Cities" written in 1859<br>Read it at the free online book site:<br>Project Gutenberg: <a href="http://www.gutenberg.org/cache/epub/98/pg98.txt">http://www.gutenberg.org/cache/epub/98/pg98.txt</a>
<form name="twocities">
<p>All the HTML elements below are in a form named "twocities". View "Source" to see the 25 questions.
<p>
<table border="1" cellspacing="0" width="100%">
<tr><td valign="top">1. The textarea below is named <b>begins</b><br>It contains the opening text of the book (form elements number 0)
<br><textarea style="margin:6px;" name="begins" rows="10" cols="80">It was the best of times, it was the worst of times,
it was the age of wisdom, it was the age of foolishness,
it was the epoch of belief, it was the epoch of incredulity,
it was the season of Light, it was the season of Darkness,
it was the spring of hope, it was the winter of despair,
we had everything before us, we had nothing before us,
we were all going direct to Heaven, we were all going direct the other way --
in short, the period was so far like the present period,
that some of its noisiest authorities insisted on its being received,
for good or for evil, in the superlative degree of comparison only.</textarea></td>
<td valign="top">2. The novel "A Tale of Two Cities" is divided into 3 books named below.<br>
There are 3 radio buttons below are named: <b>books</b><br>(form elements 1 &rarr; 3).
<br>Their values are: "1", "2" and "3"
<p><input type="radio" name="books" value="1" checked> Recalled To Life&nbsp;
<br><input type="radio" name="books" value="2"> The Golden Thread&nbsp;
<br><input type="radio" name="books" value="3"> The Track of The Storm&nbsp;
</td>
</tr>
<tr><td valign="top">3. The titles of the six chapters of the first book are shown below.
<br>The 6 checkboxes below are named: <b>c1</b> &rarr;  <b>c6</b> (form elements 4 &rarr; 9). <br>
Their values are the same as the text that appear to the right of each checkbox.
<br>&nbsp;<input type="checkbox" name="c1" value="The Period">The Period
<br>&nbsp;<input type="checkbox" name="c2" value="The Mail" checked>The Mail
<br>&nbsp;<input type="checkbox" name="c3" value="The Night Shadows">The Night Shadows
<br>&nbsp;<input type="checkbox" name="c4" value="The Prepartion" checked>The Preparation
<br>&nbsp;<input type="checkbox" name="c5" value="The Wine Shop">The Wine-shop
<br>&nbsp;<input type="checkbox" name="c6" value="The Shoemaker" checked>The Shoemaker</b>
</td><td valign="top">4. The select (drop down menu) below is named <b>book3chapters</b>
<br>(form elements number 10).
<br>The fifteen options are the titles of the fifteen chapters in Book 3.
<br>The values of the 15 options are the same as the option text shown on the select below:
<p>
<select name="book3chapters">
<option value="In Secret">In Secret
<option value="The Grindstone">The Grindstone
<option value="The Shadow">The Shadow
<option value="Calm in Storm">Calm in Storm
<option value="The Wood-sawyer">The Wood-sawyer
<option value="Triumph">Triumph
<option value="A Knock at the Door">A Knock at the Door
<option value="A Hand at Cards">A Hand at Cards
<option value="The Game Made">The Game Made
<option value="The Substance of the Shadow">The Substance of the Shadow
<option value="Dusk">Dusk
<option value="Darkness">Darkness
<option value="Fifty-two">Fifty-two
<option value="The Knitting Done">The Knitting Done
<option value="The Footsteps Die Out For Ever">The Footsteps Die Out For Ever
</select></b></td></tr></table>
</form>
<p>
<ol>
<li><span id="ans1">Contents of the span block with id="ans1"</span>
<li><span id="ans2">Contents of the span block with id="ans2"</span>
<li><span id="ans3">Contents of the span block with id="ans3"</span>
<li><span id="ans4">Contents of the span block with id="ans4"</span>
<li><span id="ans5">Contents of the span block with id="ans5"</span>
<li><span id="ans6">Contents of the span block with id="ans6"</span>
<li><span id="ans7">Contents of the span block with id="ans7"</span>
<li><span id="ans8">Contents of the span block with id="ans8"</span>
<li><span id="ans9">Contents of the span block with id="ans9"</span>
<li><span id="ans10">Contents of the span block with id="ans10"</span>
<li><span id="ans11">Contents of the span block with id="ans11"</span>
<li><span id="ans12">Contents of the span block with id="ans12"</span>
<li><span id="ans13">Contents of the span block with id="ans13"</span>
<li><span id="ans14">Contents of the span block with id="ans14"</span>
<li><span id="ans15">Contents of the span block with id="ans15"</span>
<li><span id="ans16">Contents of the span block with id="ans16"</span>
<li><span id="ans17">Contents of the span block with id="ans17"</span>
<li><span id="ans18">Contents of the span block with id="ans18"</span>
<li><span id="ans19">Contents of the span block with id="ans19"</span>
<li><span id="ans20">Contents of the span block with id="ans20"</span>
<li><span id="ans21">Contents of the span block with id="ans21"</span>
<li><span id="ans22">Contents of the span block with id="ans22"</span>
<li><span id="ans23">Contents of the span block with id="ans23"</span>
<li><span id="ans24">Contents of the span block with id="ans24"</span>
<li><span id="ans25">Contents of the span block with id="ans25"</span>
</ol>
<br><input type="button" value="this button executes the function fred()" onClick="fred()">
</body>
</HTML>
